#1. 수업소개
html은 생성되면 변경되지 않는다. 정적인 속성
JavaScript는 동적인 속성

JavaScript를 통해 html을 동적으로 만든다.

#2. 수업의 목적
JavaScript를 통해 html을 사용자와 상호작용 하게 만든다.

#3. HTML과 JS의 만남: scrtipt 태그
JS 1+1 = 2 > 동적인 속성
html 1+1 = 1+1 > 정적인 속성
script > JS라는 것을 알려주기 위해 웹브라우저에게 알려주는 html 태그

#4. HTML과 JS의 만남: 이벤트
웹페이지에서 발생하는 여러 변화들 중 사용자들에게 유용한 것들
event > onlick onchange onkeydown 등

#5. HTML과 JS의 만남: 콘솔
웹페이지에서 콘솔을 통해 실행한 내용은 그 웹 페이지에 적용

#6. 데이터 타입- 문자열과 숫자
데이터를 잘 처리하기 위해 데이터의 형태를 분류
Boolean(true false)		Null(null)
Undefined(undefined)	Number
String(문자열)		Symbol

Number
숫자라는 data type을 연산자를 통해 결과값을 만들어 낸다.

String
"Hello world"
'Hello world'  큰따옴표, 작은따옴표를 통해 감싼다.
.length

#7. 변수와 대입 연산자
var name = 'egoing';
var(variable)을 변수 앞에 붙여주자.
= 대입연산자

#8. 웹브라우저 제어
1.CSS의 기본적인 문법
2.JS를 이용하여 제어하고자 하는 태그를 선택하는 방법

#9. CSS 기초: style 속성
#10. CSS 기초: style 태그
#11. CSS기초: 선택자

#12. 제어할 태그 선택하기
query 질의하다 (웹브라우저에게 질의하다)
document.querySelector();

#13. 프로그램, 프로그래밍, 프로그래머
html JS 언어 O
JS 프로그래밍 언어 O
html 프로그래밍 언어 X
html 웹페이지를 묘사하는 목적의언어, 시간의 순서에 따라 실행될 필요 X
JS 사람과 상호작용 하기 위해 만들어진 언어, 시간의 순서에 따라 실행될 필요O
그에 따라 프로그램이 설계 될 필요가 있음.

코드의 조건에 따른 실행, 반복된 실행
순서의 배치가 복잡해지면서 코드를 잘 정리정돈 해야 할 필요성

#14. 조건문 예고 
토글 만들기

#15. 비교연산자와 블리언
Comparison Operators, Boolean
비교연산자를 통해 만들어지는 값은 블리언이며
블리언은 true 또는 false라는 값을 가진다.

#16. 조건문
boolean의 true false 값에 따라 코드의 실행 순서가 바뀜.

#17. 조건문의 활용 
if문을 활용하여 야간모드 만들기

#18. 리팩토링 중복의 제거
코딩을 하며 중복되거나 비효율적인 부분이 발생
이를 제거하는 것이 리팩트링

this
var 00 = 000 이용 

#19. 반복문 예고
여러번 반복해야 하는 것들을 쉽게 처리

#20. 배열
데이터가 많아짐에 따라 데이터를 정리하기 위한 수납 상자
Array: Syntax, Count, 추가, 삭제 등

#21. 반복문
while () {
	document.write('0000');
}

#22. 배열과 반복문
배열을 통해 정리된 데이터를
반복문을 통해 데이터들을 하나씩 꺼내어 처리

#23. 배열과 반복문의 활용 
document.querySelectorAll('000');

#24. 함수예고
웹페이지의 크기가 커지면 인터넷을 통해 전송할 때 비용, 시간적 자원이 많이 필요해진다.
이를 해결하기 위해 함수 사용

#25. 함수
함수의 선언, 문법

#26. 함수: 매개변수와 인자
Parameter 매개변수
Argument 인자

Function name(parameter) {
	document.write('000');
}
document.write('parameter + alpha');

#27. 함수(리턴)
표현식과 값
1+1 은 2라는 '값'을 만들어내는 '표현식'
function
return

#28. 함수의 활용 
매게변수 설정 과정 설명(나중에 다시 이해하기)

#29. 객체 예고
서로 연관된 함수와 서로 연관된 변수를 같은 이름으로 그룹핑하여 잘 정리정돈 하기 위한 도구
객체는 폴더의 역할
객체에 속해있는 함수는 함수라고 하지 않고 메소드 라고 한다.

#30. 객체 쓰기와 읽기
객체 Object

#31. 객체와 반복문
반복문을 통해 객체의 요소들 나타내기

#32. 객체프로퍼티와 메소드
객체에 소속된 함수 : 메소드
객체에 소속된 변수 : 객체 프로퍼티

#33. 객체의 활용
다시 보기

함수 > 코드가 많아지면 정리정돈하는 도구
객체 > 함수와 변수가 많아지면 정리정돈하는 도구
 